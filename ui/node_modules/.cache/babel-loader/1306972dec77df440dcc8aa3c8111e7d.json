{"ast":null,"code":"import { uiActions } from \"../store/ui-slice\";\nimport { NotificationStatus } from \"../store/NotificationStatus\";\nconst addAuthToken = (dispatch, user) => {\n  const token = user.token;\n  if (!token) {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.ERROR,\n      title: 'Authorization token not found',\n      message: 'You must log in to perform the action'\n    }));\n    return \"\";\n  }\n  return token;\n};\nexport const sendRequest = async (dispatch, url, method, user, body) => {\n  const token = addAuthToken(dispatch, user);\n  const init = {\n    method,\n    body: method === 'GET' ? null : JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    }\n  };\n  debugger;\n  const sendingData = await fetch(url, init);\n  if (!sendingData.ok) {\n    throw new Error('Sending data failed.');\n  }\n  return sendingData;\n};","map":{"version":3,"names":["uiActions","NotificationStatus","addAuthToken","dispatch","user","token","showNotification","status","ERROR","title","message","sendRequest","url","method","body","init","JSON","stringify","headers","sendingData","fetch","ok","Error"],"sources":["C:/Workspace/Java_Test/springboot-react-test/ui/src/utils/Auth.tsx"],"sourcesContent":["import {User} from \"../types/User\";\r\nimport {uiActions} from \"../store/ui-slice\";\r\nimport {NotificationStatus} from \"../store/NotificationStatus\";\r\nimport {Product} from \"../types/Product\";\r\n\r\n\r\nconst addAuthToken = (dispatch: any, user: User) => {\r\n  const token = user.token;\r\n\r\n  if (!token) {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.ERROR,\r\n        title: 'Authorization token not found',\r\n        message: 'You must log in to perform the action'\r\n      })\r\n    );\r\n    return \"\";\r\n  }\r\n\r\n  return token;\r\n}\r\n\r\nexport const sendRequest = async (dispatch: any, url: string, method: string, user: User, body?: Product | User) => {\r\n  const token = addAuthToken(dispatch, user);\r\n\r\n  const init = {\r\n    method,\r\n    body: method === 'GET' ? null : JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    }\r\n  };\r\n  debugger\r\n  const sendingData = await fetch(url, init);\r\n\r\n  if (!sendingData.ok) {\r\n    throw new Error('Sending data failed.');\r\n  }\r\n\r\n  return sendingData;\r\n};"],"mappings":"AACA,SAAQA,SAAS,QAAO,mBAAmB;AAC3C,SAAQC,kBAAkB,QAAO,6BAA6B;AAI9D,MAAMC,YAAY,GAAG,CAACC,QAAa,EAAEC,IAAU,KAAK;EAClD,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EAExB,IAAI,CAACA,KAAK,EAAE;IACVF,QAAQ,CACNH,SAAS,CAACM,gBAAgB,CAAC;MACzBC,MAAM,EAAEN,kBAAkB,CAACO,KAAK;MAChCC,KAAK,EAAE,+BAA+B;MACtCC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,OAAO,EAAE;EACX;EAEA,OAAOL,KAAK;AACd,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,OAAOR,QAAa,EAAES,GAAW,EAAEC,MAAc,EAAET,IAAU,EAAEU,IAAqB,KAAK;EAClH,MAAMT,KAAK,GAAGH,YAAY,CAACC,QAAQ,EAAEC,IAAI,CAAC;EAE1C,MAAMW,IAAI,GAAG;IACXF,MAAM;IACNC,IAAI,EAAED,MAAM,KAAK,KAAK,GAAG,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACpDI,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAEb;IACnB;EACF,CAAC;EACD;EACA,MAAMc,WAAW,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEG,IAAI,CAAC;EAE1C,IAAI,CAACI,WAAW,CAACE,EAAE,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,OAAOH,WAAW;AACpB,CAAC"},"metadata":{},"sourceType":"module"}