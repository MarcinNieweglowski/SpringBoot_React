{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { NotificationStatus } from \"./NotificationStatus\";\nimport { userActions } from \"./user-slice\";\nexport const logIn = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Logging in...',\n      message: 'Attempting to log in'\n    }));\n    try {\n      const response = await sendRequest('/auth/login', 'POST', JSON.stringify(user));\n      if (!response.ok) {\n        throw Error(\"Invalid credentials\");\n      }\n      const loggedInUser = await response.json();\n      dispatch(userActions.logIn(loggedInUser));\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Logged in',\n        message: 'Successfully logged in'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Invalid credentials!',\n        message: 'Failed to log in'\n      }));\n    }\n  };\n};\nexport const logOut = () => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Logging out...',\n      message: 'Attempting to log out'\n    }));\n    dispatch(userActions.logOut(null));\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.SUCCESS,\n      title: 'Logged out',\n      message: 'Successfully logged out'\n    }));\n  };\n};\nexport const signIn = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Signing in...',\n      message: 'Creating a new user'\n    }));\n    try {\n      await sendRequest('/auth/signin', 'POST', JSON.stringify(user));\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Created a new account',\n        message: 'Successfully created a new account'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to create a new account'\n      }));\n    }\n  };\n};\nexport const fetchAllUsers = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Fetching...',\n      message: 'Fetching all users...'\n    }));\n    try {\n      const response = await sendRequest('/user', 'GET', JSON.stringify(user));\n      const responseData = response.json();\n      debugger;\n      dispatch(userActions.fetchAllUsers(responseData));\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Fetched all users',\n        message: 'Successfully fetched all users'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to fetch all users'\n      }));\n    }\n  };\n};\nconst sendRequest = async (url, method, body) => {\n  const sendingData = await fetch(url, {\n    method: method || 'GET',\n    body,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!sendingData.ok) {\n    throw new Error('Sending product data failed.');\n  }\n  return sendingData;\n};","map":{"version":3,"names":["uiActions","NotificationStatus","userActions","logIn","user","dispatch","showNotification","status","PENDING","title","message","response","sendRequest","JSON","stringify","ok","Error","loggedInUser","json","SUCCESS","error","ERROR","logOut","signIn","fetchAllUsers","responseData","url","method","body","sendingData","fetch","headers"],"sources":["C:/Workspace/Java_Test/springboot-react-test/ui/src/store/user-actions.tsx"],"sourcesContent":["import {User} from \"../types/User\";\r\nimport {uiActions} from \"./ui-slice\";\r\nimport {NotificationStatus} from \"./NotificationStatus\";\r\nimport {userActions} from \"./user-slice\";\r\n\r\nexport const logIn: any = (user: User) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Logging in...',\r\n        message: 'Attempting to log in'\r\n      })\r\n    );\r\n\r\n    try {\r\n      const response: any = await sendRequest('/auth/login', 'POST', JSON.stringify(user));\r\n      if (!response.ok) {\r\n        throw Error(\"Invalid credentials\")\r\n      }\r\n\r\n      const loggedInUser: User = await response.json();\r\n      dispatch(userActions.logIn(loggedInUser));\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Logged in',\r\n          message: 'Successfully logged in'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Invalid credentials!',\r\n          message: 'Failed to log in'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const logOut: any = () => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Logging out...',\r\n        message: 'Attempting to log out'\r\n      })\r\n    );\r\n\r\n    dispatch(userActions.logOut(null));\r\n\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.SUCCESS,\r\n        title: 'Logged out',\r\n        message: 'Successfully logged out'\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const signIn: any = (user: User) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Signing in...',\r\n        message: 'Creating a new user'\r\n      })\r\n    );\r\n\r\n    try {\r\n      await sendRequest('/auth/signin', 'POST', JSON.stringify(user));\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Created a new account',\r\n          message: 'Successfully created a new account'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to create a new account'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers: any = (user: User) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Fetching...',\r\n        message: 'Fetching all users...'\r\n      })\r\n    );\r\n\r\n    try {\r\n      const response = await sendRequest('/user', 'GET', JSON.stringify(user));\r\n      const responseData = response.json();\r\n      debugger\r\n      dispatch(userActions.fetchAllUsers(responseData));\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Fetched all users',\r\n          message: 'Successfully fetched all users'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to fetch all users'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst sendRequest = async (url: string, method?: string, body?: string) => {\r\n  const sendingData = await fetch(url, {\r\n    method: method || 'GET',\r\n    body,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\n  if (!sendingData.ok) {\r\n    throw new Error('Sending product data failed.');\r\n  }\r\n\r\n  return sendingData;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}