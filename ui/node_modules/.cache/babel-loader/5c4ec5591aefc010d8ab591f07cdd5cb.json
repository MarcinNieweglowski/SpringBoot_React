{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { NotificationStatus } from \"./NotificationStatus\";\nimport { userActions } from \"./user-slice\";\nimport { sendRequest } from \"../utils/Auth\";\nexport const logIn = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Logging in...',\n      message: 'Attempting to log in'\n    }));\n    try {\n      const response = await sendRequest(dispatch, '/auth/login', 'POST', user, user);\n      if (!response.ok) {\n        throw Error(\"Invalid credentials\");\n      }\n      const loggedInUser = await response.json();\n      dispatch(userActions.logIn(loggedInUser));\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Logged in',\n        message: 'Successfully logged in'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Invalid credentials!',\n        message: 'Failed to log in'\n      }));\n    }\n  };\n};\nexport const logOut = () => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Logging out...',\n      message: 'Attempting to log out'\n    }));\n    dispatch(userActions.logOut(null));\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.SUCCESS,\n      title: 'Logged out',\n      message: 'Successfully logged out'\n    }));\n  };\n};\nexport const signIn = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Signing in...',\n      message: 'Creating a new user'\n    }));\n    try {\n      await sendRequest(dispatch, '/auth/signin', 'POST', user, user);\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Created a new account',\n        message: 'Successfully created a new account'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to create a new account'\n      }));\n    }\n  };\n};\nexport const fetchAllUsers = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Fetching...',\n      message: 'Fetching all users...'\n    }));\n    try {\n      console.log('before sendRequest');\n      const response = await sendRequest(dispatch, '/user', 'GET', user, user);\n      console.log('before .json');\n      const responseData = await response.json();\n      console.log('before userActions');\n      debugger;\n      dispatch(userActions.fetchAllUsers(responseData));\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Fetched all users',\n        message: 'Successfully fetched all users'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to fetch all users'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","NotificationStatus","userActions","sendRequest","logIn","user","dispatch","showNotification","status","PENDING","title","message","response","ok","Error","loggedInUser","json","SUCCESS","error","ERROR","logOut","signIn","fetchAllUsers","console","log","responseData"],"sources":["C:/Workspace/Java_Test/springboot-react-test/ui/src/store/user-actions.tsx"],"sourcesContent":["import {User} from \"../types/User\";\r\nimport {uiActions} from \"./ui-slice\";\r\nimport {NotificationStatus} from \"./NotificationStatus\";\r\nimport {userActions} from \"./user-slice\";\r\nimport {sendRequest} from \"../utils/Auth\";\r\n\r\nexport const logIn: any = (user: User) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Logging in...',\r\n        message: 'Attempting to log in'\r\n      })\r\n    );\r\n\r\n    try {\r\n      const response: any = await sendRequest(dispatch, '/auth/login', 'POST', user, user);\r\n      if (!response.ok) {\r\n        throw Error(\"Invalid credentials\")\r\n      }\r\n\r\n      const loggedInUser: User = await response.json();\r\n      dispatch(userActions.logIn(loggedInUser));\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Logged in',\r\n          message: 'Successfully logged in'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Invalid credentials!',\r\n          message: 'Failed to log in'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const logOut: any = () => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Logging out...',\r\n        message: 'Attempting to log out'\r\n      })\r\n    );\r\n\r\n    dispatch(userActions.logOut(null));\r\n\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.SUCCESS,\r\n        title: 'Logged out',\r\n        message: 'Successfully logged out'\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const signIn: any = (user: User) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Signing in...',\r\n        message: 'Creating a new user'\r\n      })\r\n    );\r\n\r\n    try {\r\n      await sendRequest(dispatch, '/auth/signin', 'POST', user, user);\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Created a new account',\r\n          message: 'Successfully created a new account'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to create a new account'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchAllUsers: any = (user: User) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Fetching...',\r\n        message: 'Fetching all users...'\r\n      })\r\n    );\r\n\r\n    try {\r\n      console.log('before sendRequest')\r\n      const response = await sendRequest(dispatch, '/user', 'GET', user, user);\r\n      console.log('before .json')\r\n      const responseData = await response.json();\r\n      console.log('before userActions')\r\n      debugger\r\n      dispatch(userActions.fetchAllUsers(responseData));\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Fetched all users',\r\n          message: 'Successfully fetched all users'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to fetch all users'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}