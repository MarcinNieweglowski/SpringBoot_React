{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Java_Test\\\\springboot-react-test\\\\ui\\\\src\\\\store\\\\product-actions.tsx\";\nimport React from \"react\";\nimport { uiActions } from \"./ui-slice\";\nimport { NotificationStatus } from \"./NotificationStatus\";\nimport { productActions } from \"./product-slice\";\nimport fileDownload from \"js-file-download\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const fetchProductsData = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Fetching...',\n      message: 'Fetching products data'\n    }));\n    const fetchProducts = async () => {\n      const response = await sendRequest(dispatch, '/products', 'GET', user);\n      if (!response.ok) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Failed to fetch products list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      }\n      const responseData = await response.json();\n      return responseData;\n    };\n    try {\n      const products = await fetchProducts();\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Success',\n        message: 'Successfully fetched product data'\n      }));\n      const totalPrice = products.map(product => product.price * product.quantity).reduce((total, current) => total + current, 0);\n      dispatch(productActions.populateProductList({\n        products: products || [],\n        totalPrice: totalPrice\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to fetch product data'\n      }));\n    }\n  };\n};\nexport const addNewProduct = product => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Creating...',\n      message: `Creating new product '${product.name}'`\n    }));\n    try {\n      const response = await sendRequest(dispatch, '/products/new', 'POST', product);\n      const responseData = await response.json();\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Success',\n        message: `Successfully created product '${product.name}'`\n      }));\n      dispatch(productActions.addProduct(responseData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to create new product'\n      }));\n    }\n  };\n};\nexport const deleteProduct = product => {\n  return async dispatch => {\n    const deletedProductName = product.name;\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Deleting...',\n      message: `Deleting product '${product.name}'`\n    }));\n    try {\n      await sendRequest(dispatch, `/products/${product.productId}`, 'DELETE', product);\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Success',\n        message: `Successfully deleted product '${deletedProductName}'`\n      }));\n      dispatch(productActions.deleteProduct(product));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to delete product data'\n      }));\n    }\n  };\n};\nexport const modifyProduct = product => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Updating...',\n      message: 'Updating product data'\n    }));\n    try {\n      const response = await sendRequest(dispatch, `/products/edit/${product.productId}`, 'PUT', product);\n      const responseData = await response.json();\n      dispatch(productActions.editProduct(responseData));\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Success',\n        message: 'Successfully fetched product data'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to send new product data'\n      }));\n    }\n  };\n};\nexport const download = user => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: NotificationStatus.PENDING,\n      title: 'Printing...',\n      message: 'Printing products'\n    }));\n    try {\n      const response = await sendRequest(dispatch, '/products/download', 'GET', user);\n      const blob = await response.blob();\n      fileDownload(blob, 'products.pdf');\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.SUCCESS,\n        title: 'Success',\n        message: 'Successfully generated the file'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Error!',\n        message: 'Failed to generate the file'\n      }));\n    }\n  };\n};\nconst sendRequest = async (dispatch, url, method, body) => {\n  const addAuthToken = dispatch => {\n    const token = (body === null || body === void 0 ? void 0 : body.token) || (body === null || body === void 0 ? void 0 : body.user.token);\n    if (!token) {\n      dispatch(uiActions.showNotification({\n        status: NotificationStatus.ERROR,\n        title: 'Authorization token not found',\n        message: 'You must log in to perform the action'\n      }));\n      return \"\";\n    }\n    return token;\n  };\n  const token = addAuthToken(dispatch);\n  debugger;\n  const sendingData = await fetch(url, {\n    method: method,\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    }\n  });\n  debugger;\n  if (!sendingData.ok) {\n    throw new Error('Sending product data failed.');\n  }\n  return sendingData;\n};","map":{"version":3,"names":["React","uiActions","NotificationStatus","productActions","fileDownload","fetchProductsData","user","dispatch","showNotification","status","PENDING","title","message","fetchProducts","response","sendRequest","ok","responseData","json","products","SUCCESS","totalPrice","map","product","price","quantity","reduce","total","current","populateProductList","error","ERROR","addNewProduct","name","addProduct","deleteProduct","deletedProductName","productId","modifyProduct","editProduct","download","blob","url","method","body","addAuthToken","token","sendingData","fetch","JSON","stringify","headers","Error"],"sources":["C:/Workspace/Java_Test/springboot-react-test/ui/src/store/product-actions.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {uiActions} from \"./ui-slice\";\r\nimport {NotificationStatus} from \"./NotificationStatus\";\r\nimport {productActions} from \"./product-slice\";\r\nimport {Product} from \"../types/Product\";\r\nimport fileDownload from \"js-file-download\"\r\nimport {User} from \"../types/User\";\r\n\r\nexport const fetchProductsData: any = (user: any) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Fetching...',\r\n        message: 'Fetching products data'\r\n      })\r\n    );\r\n\r\n    const fetchProducts = async () => {\r\n      const response = await sendRequest(dispatch, '/products', 'GET', user);\r\n\r\n      if (!response.ok) {\r\n        return <div>Failed to fetch products list.</div>\r\n      }\r\n\r\n      const responseData = await response.json() as Product;\r\n\r\n      return responseData;\r\n    }\r\n\r\n    try {\r\n      const products: any = await fetchProducts();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Success',\r\n          message: 'Successfully fetched product data'\r\n        })\r\n      );\r\n\r\n      const totalPrice = products\r\n        .map((product: Product) => product.price * product.quantity)\r\n        .reduce((total: number, current: number) => total + current, 0);\r\n\r\n      dispatch(\r\n        productActions.populateProductList({\r\n          products: products || [],\r\n          totalPrice: totalPrice\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to fetch product data'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const addNewProduct: any = (product: Product) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Creating...',\r\n        message: `Creating new product '${product.name}'`\r\n      })\r\n    );\r\n\r\n    try {\r\n      const response = await sendRequest(dispatch, '/products/new', 'POST', product);\r\n      const responseData: Product = await response.json();\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Success',\r\n          message: `Successfully created product '${product.name}'`\r\n        })\r\n      );\r\n\r\n      dispatch(productActions.addProduct(responseData));\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to create new product'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteProduct: any = (product: Product) => {\r\n  return async (dispatch: any) => {\r\n    const deletedProductName: string = product.name;\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Deleting...',\r\n        message: `Deleting product '${product.name}'`\r\n      })\r\n    );\r\n\r\n    try {\r\n      await sendRequest(dispatch, `/products/${product.productId}`, 'DELETE', product);\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Success',\r\n          message: `Successfully deleted product '${deletedProductName}'`\r\n        })\r\n      );\r\n      dispatch(productActions.deleteProduct(product));\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to delete product data'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const modifyProduct: any = (product: Product) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Updating...',\r\n        message: 'Updating product data'\r\n      })\r\n    );\r\n\r\n    try {\r\n      const response = await sendRequest(dispatch, `/products/edit/${product.productId}`, 'PUT', product);\r\n      const responseData = await response.json();\r\n\r\n      dispatch(productActions.editProduct(responseData));\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Success',\r\n          message: 'Successfully fetched product data'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to send new product data'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const download = (user: User): any => {\r\n  return async (dispatch: any) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: NotificationStatus.PENDING,\r\n        title: 'Printing...',\r\n        message: 'Printing products'\r\n      })\r\n    );\r\n\r\n    try {\r\n      const response = await sendRequest(dispatch, '/products/download', 'GET', user);\r\n      const blob = await response.blob()\r\n\r\n      fileDownload(blob, 'products.pdf')\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.SUCCESS,\r\n          title: 'Success',\r\n          message: 'Successfully generated the file'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Error!',\r\n          message: 'Failed to generate the file'\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst sendRequest = async (dispatch: any, url: string, method: string, body: any) => {\r\n  const addAuthToken = (dispatch: any) => {\r\n    const token = body?.token || body?.user.token;\r\n\r\n    if (!token) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: NotificationStatus.ERROR,\r\n          title: 'Authorization token not found',\r\n          message: 'You must log in to perform the action'\r\n        })\r\n      );\r\n      return \"\";\r\n    }\r\n    return token;\r\n  }\r\n\r\n  const token = addAuthToken(dispatch);\r\n  debugger\r\n  const sendingData = await fetch(url, {\r\n    method: method,\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    }\r\n  });\r\n\r\n  debugger\r\n  if (!sendingData.ok) {\r\n    throw new Error('Sending product data failed.');\r\n  }\r\n\r\n  return sendingData;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}